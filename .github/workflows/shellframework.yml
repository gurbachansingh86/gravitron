name: gravitron

on: [push]

env:
  IMAGE_NAME: gravitron         # Replace with your desired image name
  ACR_NAME: multiarchtest      # Replace with your Azure Container Registry name
  DOCKER_CLI_A: '{"experimental": "enabled"}'  # Enable experimental mode for Docker Buildx

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Cache Maven dependencies
        id: cache-maven
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Build with Maven
        run: mvn clean package

      - name: Save Maven dependencies cache
        if: steps.cache-maven.outputs.cache-hit == 'false'
        run: |
          mkdir -p ~/.m2
          mv ~/.m2/repository $GITHUB_WORKSPACE/m2-cache

      - name: Upload Maven dependencies cache
        if: steps.cache-maven.outputs.cache-hit == 'false'
        uses: actions/upload-artifact@v2
        with:
          name: m2-cache
          path: $GITHUB_WORKSPACE/m2-cache

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Enable Docker Buildx experimental mode
        run: echo $DOCKER_CLI_A | sudo tee /etc/docker/daemon.json
        if: runner.os == 'Linux'  # This step is specific to Linux-based runners

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build multi-platform Docker image
        run: |
          docker buildx create --use --name mybuilder
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache --push --tag ${{ env.ACR_NAME }}/${{ env.IMAGE_NAME }}:latest --tag ${{ env.ACR_NAME }}/${{ env.IMAGE_NAME }}:1.0 .
        if: runner.os == 'Linux'  # This step is specific to Linux-based runners

      - name: Remove Docker Buildx experimental mode config
        run: sudo rm /etc/docker/daemon.json
        if: runner.os == 'Linux'  # This step is specific to Linux-based runners

      - name: Build and Push multi-platform Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.ACR_NAME }}/${{ env.IMAGE_NAME }}:latest
